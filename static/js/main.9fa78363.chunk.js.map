{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoding","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"gZA+CeA,MA1Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,yBAAKC,UAAU,SACX,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACHR,OACAC,QACAC,UACAC,SACAC,YAIR,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACTD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOR,UAAU,iBACrBO,OAIb,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAG,KAAhD,WCmCLC,G,iNApDbR,MAAQ,CACNS,UAAU,EACVC,OAAQ,I,EAUVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,UAAU,IANxB,2C,mFAUVQ,KAAKN,c,+BAEG,IAAD,EACsBM,KAAKjB,MAA1BS,EADD,EACCA,SAAUC,EADX,EACWA,OAClB,OACE,6BAASb,UAAU,aAChBY,EACC,yBAAKZ,UAAU,UACb,0BAAMA,UAAY,gBAAlB,eAGA,yBAAKA,UAAU,UACXa,EAAOP,KAAI,SAAAe,GAAK,OAClB,kBAAC,EAAD,CACEZ,IAAKY,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,kB,GA5CXwB,IAAMC,Y,MCIVC,MAbf,SAAeC,GAEb,OACE,yBAAK1B,UAAU,oBACb,8IAIA,8DCwBS2B,E,4LArBU,IAAD,EACcP,KAAKM,MAA3BE,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAASzB,OACT0B,EAAQE,KAAK,O,+BASX,IACEH,EAAaR,KAAKM,MAAlBE,SACR,OAAIA,EAASzB,MACF,8BAAOyB,EAASzB,MAAMP,OAEtB,S,GAxBE2B,IAAMC,W,MCsBVQ,MATjB,WACI,OACE,yBAAKhC,UAAU,OACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCWOgC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAYzB,IACzC,kBAAC,IAAD,CAAOuB,KAAK,SAASE,UAAWX,IAChC,kBAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWT,MC1B1CU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9fa78363.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link\r\n                to={{\r\n                    pathname: `/movie/${id}`,\r\n                    state: {\r\n                        year,\r\n                        title,\r\n                        summary,\r\n                        poster,\r\n                        genres\r\n                    }\r\n                }}\r\n            >\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <ul className=\"movie__genres\">\r\n                        {genres.map((genre, index) => (\r\n                            <li key={index} className=\"genres__genre\">\r\n                                {genre}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\"\r\n\r\n/*\r\n  - axios \r\n   -> facth 위에 작은 Layer라고 볼 수 있음 (facth랑 비슷한 역할을 함)\r\n  \r\n   -> TERMINAL 명령어 : npm i axios 로 다운 가능\r\n\r\n*/\r\nclass Home extends React.Component {\r\n\r\n  state = {\r\n    isLoding: true,\r\n    movies: []\r\n  };\r\n\r\n  /*\r\n    - axios가 실행되기까지는 약간의 시간이 소요 되기 때문에 다음과 같이 처리\r\n     -> async : 비동기를 의미\r\n     \r\n     -> await : await 뒤에 작업이 실행 될 때까지 기다렸다가 실행 된 후 \r\n               나머지 작업 진행\r\n  */\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({ movies, isLoding: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoding, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoding ? (\r\n          <div className=\"loader\">\r\n            <span className = \"loader__text\">Loading...</span>\r\n          </div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n               {movies.map(movie => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))\r\n  }\r\n            </div>\r\n          )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\n/*\r\n   - history\r\n    -> 해당하는 history에 보면 go, goBack등 다양한 url 이동 prop들이 존재\r\n      => 이것을 이용하여 url 이동을 시킬 수 있음\r\n*/\r\nclass Detail extends React.Component{\r\n\r\n    /*\r\n       - redirect\r\n        -> loaction이 undefined 즉 클릭이 아닌 url을 직접 입력한 경우\r\n          home으로 돌려 보낼 수 있음\r\n    */ \r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if (location.state === undefined) {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    /*\r\n      - error 제어\r\n       -> url 직접입력은 막았지만 만약 render에서 location이 존재 하지 않으면\r\n         에러가 남 그것을 방지하기 위해 조건문 처리를 해줌\r\n    */\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n            return <span>{location.state.title}</span>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default Detail;","  \r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\n/*\r\n  - Link\r\n   -> 일반적인 a태그에 href를 사용하면 페이지로 이동되기 때문에 새로고침이\r\n     강제로 이루어짐\r\n\r\n   -> Link를 사용하면 원하는 경로로 이동을 할 수 있음\r\n     => 이때 href가 아닌 to를 사용 하여야 함\r\n\r\n   -> Link를 사용하기 위해서는 반드시 Roter안에 있어야지 사용 할 수 있음\r\n     => App.js의 <HashRouter>여기에 존재하여야만 함</HashRouter>\r\n\r\n   -> to를 사용 할 때 to에 존재하는 prop들을 선언하여 url 이동시 \r\n     prop들을 같이 이동 시킬 수 있음\r\n     => Movie.js Link 참고\r\n*/\r\nfunction Navigation() {\r\n    return (\r\n      <div className=\"nav\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">About</Link>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\n/*\n  - Route \n   -> 이동하기 원하는 곳으로 보내주는 React 기능\n\n   -> Route는 url에 따라 비교 함 \n     => 만약 url이 / 로 이어진다면 /에 따른 route가 rendering 됌 \n     => home/introduction --> 2개의 component를 갖게 됌\n\n   -> exact : 해당 하는 route만 rendering 하는 기능\n\n\n  - Navigation은 prop이 존재 하지 않음\n\n  - path경로에 :id와 같이 :을 붙이면 변수로 활용 할 수 있음\n*/\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component ={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}